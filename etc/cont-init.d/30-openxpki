#! /usr/bin/with-contenv bash
# shellcheck shell=bash

print_msg () { printf '[%s] %s' "${0##*/}" "${@}"; }
echo_msg () { print_msg "${*}"; echo; }


# check config.d exists
print_msg '/etc/openxpki/config.d .. '
if [ ! -d "/etc/openxpki/config.d" ]; then 
	echo 'missing!'

	print_msg "Installing config from github.com/openxpki/openxpki-config (${OXPKI_CONFIG_VERSION}).. "
	wget -qO- "https://github.com/openxpki/openxpki-config/archive/refs/tags/${OXPKI_CONFIG_VERSION}.tar.gz" \
		| tar fzx - --strip-components=1 -C /etc/openxpki || { echo "Error: could not fetch config."; exit 1; }

	chown -R openxpki:root /etc/openxpki
	echo 'done'
else
	echo 'OK'
fi

# set database.yaml from env
DB_YAML="/etc/openxpki/config.d/system/database.yaml"

print_msg "${DB_YAML}.. "
for var_name in TYPE HOST PORT NAME USER PASS; do
	var="OXPKI_DB_${var_name}"

	[ -z "${!var+set}" ] && continue

	[ "${var_name}" = "PASS" ] && yaml_name='passwd'
	sed -E "s|(^\s+${yaml_name-${var_name}}:\s+).*$|\\1${yaml_value:-${!var}}|gmi" -i "${DB_YAML}"
done && echo 'OK'

# enable or disable databse debug mode
# this is _not_ the same as OXPKI_DEBUG, which sets the debug flag on the executable at run time
sed -E "s|(^\s+debug:\s+).*$|\\1${OXPKI_DB_DEBUG:-0}|gmi" -i "${DB_YAML}"


# make sure we have a config
print_msg 'Initialization.. '
if [ ! -f '/etc/openxpki/.initiated' ] || [ -f '/etc/openxpki/.force_init' ]; then
	echo 'running'
	print_msg 'Creating config.. '
	CUSTOMCONFIG_FILE='/etc/openxpki/customconfig.sh'
	SAMPLECONFIG_FILE='/etc/openxpki/contrib/sampleconfig.sh'

  if [ -f "${CUSTOMCONFIG_FILE}" ]; then
		echo "using ${CUSTOMCONFIG_FILE}"
		chmod a+x "${CUSTOMCONFIG_FILE}"
		"${CUSTOMCONFIG_FILE}" || { echo_msg '*** ERROR ***'; exit 1; }

	elif [ -f "${SAMPLECONFIG_FILE}" ]; then
    echo "using ${SAMPLECONFIG_FILE}"
		chmod a+x "${SAMPLECONFIG_FILE}"
		"${SAMPLECONFIG_FILE}" || { echo_msg '*** ERROR ***'; exit 1; }

  else
    echo 'ERROR: could not find customconfig.sh or sampleconfig.sh'
    exit 1
  fi

	# sampleconfig.sh starts the server, which conflicts with services.d at init
	openxpkictl stop >/dev/null 2>&1 || true
	service apache2 stop >/dev/null 2>&1 || true

	rm -f /etc/openxpki/.force_init >/dev/null 2>&1
	echo >/etc/openxpki/.initiated
else
	echo 'OK'
fi
